"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const AuthController_1 = __importDefault(require("../app/controllers/AuthController"));
const SchoolAuthController_1 = __importDefault(require("../app/controllers/SchoolAuthController"));
const AttendanceController_1 = __importDefault(require("../app/controllers/AttendanceController"));
const JournalController_1 = __importDefault(require("../app/controllers/JournalController"));
const ExamController_1 = __importDefault(require("../app/controllers/ExamController"));
const StudentController_1 = __importDefault(require("../app/controllers/StudentController"));
const TeacherController_1 = __importDefault(require("../app/controllers/TeacherController"));
const ParentController_1 = __importDefault(require("../app/controllers/ParentController"));
const SubjectController_1 = __importDefault(require("../app/controllers/SubjectController"));
const ClassController_1 = __importDefault(require("../app/controllers/ClassController"));
const auth_1 = __importDefault(require("../app/middlewares/auth"));
const roleAuth_1 = __importDefault(require("../app/middlewares/roleAuth"));
const HomeController_1 = __importDefault(require("../app/controllers/HomeController"));
const AssetController_1 = __importDefault(require("../app/controllers/AssetController"));
const hyper_express_1 = __importDefault(require("hyper-express"));
const Route = new hyper_express_1.default.Router();
Route.get("/", HomeController_1.default.index);
Route.get("/login", AuthController_1.default.loginPage);
Route.post("/login", SchoolAuthController_1.default.processLogin);
Route.post("/student/login", AuthController_1.default.processStudentLogin);
Route.get("/register", AuthController_1.default.registerPage);
Route.post("/register", SchoolAuthController_1.default.processRegister);
Route.post("/logout", AuthController_1.default.logout);
Route.get("/google/redirect", AuthController_1.default.redirect);
Route.get("/google/callback", AuthController_1.default.googleCallback);
Route.get("/forgot-password", AuthController_1.default.forgotPasswordPage);
Route.post("/forgot-password", AuthController_1.default.sendResetPassword);
Route.get("/reset-password/:id", AuthController_1.default.resetPasswordPage);
Route.post("/reset-password", AuthController_1.default.resetPassword);
Route.get("/dashboard/student", [auth_1.default, roleAuth_1.default.student()], SchoolAuthController_1.default.getDashboardData);
Route.get("/dashboard/teacher", [auth_1.default, roleAuth_1.default.teacher()], SchoolAuthController_1.default.getDashboardData);
Route.get("/dashboard/parent", [auth_1.default, roleAuth_1.default.parent()], SchoolAuthController_1.default.getDashboardData);
Route.get("/dashboard/admin", [auth_1.default, roleAuth_1.default.admin()], SchoolAuthController_1.default.getDashboardData);
Route.post("/api/attendance/scan-student", [auth_1.default, roleAuth_1.default.teacher()], AttendanceController_1.default.scanStudentQR);
Route.get("/api/attendance/subjects/:class_id", [auth_1.default, roleAuth_1.default.teacher()], AttendanceController_1.default.getAvailableSubjects);
Route.get("/api/attendance/today-schedules", [auth_1.default, roleAuth_1.default.teacher()], AttendanceController_1.default.getTodaySchedules);
Route.post("/api/attendance/scan", [auth_1.default, roleAuth_1.default.student()], AttendanceController_1.default.processScan);
Route.get("/api/attendance/class/:class_id", [auth_1.default, roleAuth_1.default.teacherOrAdmin()], AttendanceController_1.default.getClassAttendance);
Route.get("/api/attendance/student/:student_id", [auth_1.default], AttendanceController_1.default.getStudentAttendance);
Route.get("/api/attendance/stats/:student_id", [auth_1.default], AttendanceController_1.default.getAttendanceStats);
Route.get("/api/attendance/student/:student_id/history", [auth_1.default], AttendanceController_1.default.getStudentAttendanceHistory);
Route.get("/api/attendance/student/:student_id/stats-by-subject", [auth_1.default], AttendanceController_1.default.getStudentAttendanceStatsBySubject);
Route.get("/api/attendance/student/:student_id/subjects", [auth_1.default], AttendanceController_1.default.getStudentSubjects);
Route.get("/api/attendance/parent/:parent_id/children", [auth_1.default, roleAuth_1.default.require(['parent', 'admin'])], AttendanceController_1.default.getParentChildren);
Route.get("/api/attendance/parent/:parent_id/children/history", [auth_1.default, roleAuth_1.default.require(['parent', 'admin'])], AttendanceController_1.default.getParentChildrenAttendanceHistory);
Route.get("/api/attendance/parent/:parent_id/children/stats", [auth_1.default, roleAuth_1.default.require(['parent', 'admin'])], AttendanceController_1.default.getParentChildrenAttendanceStats);
Route.get("/api/attendance/parent/:parent_id/children/subjects", [auth_1.default, roleAuth_1.default.require(['parent', 'admin'])], AttendanceController_1.default.getParentChildrenSubjects);
Route.post("/api/attendance/close/:session_id", [auth_1.default, roleAuth_1.default.teacher()], AttendanceController_1.default.closeSession);
Route.get("/api/attendance/teacher/sessions", [auth_1.default, roleAuth_1.default.teacher()], AttendanceController_1.default.getTeacherAttendanceSessions);
Route.get("/api/attendance/class/:class_id/students", [auth_1.default, roleAuth_1.default.teacherOrAdmin()], AttendanceController_1.default.getClassStudentsForAttendance);
Route.post("/api/attendance/manual", [auth_1.default, roleAuth_1.default.teacher()], AttendanceController_1.default.manualAttendance);
Route.put("/api/attendance/record/:attendance_id", [auth_1.default, roleAuth_1.default.teacher()], AttendanceController_1.default.updateAttendance);
Route.get("/api/attendance/teacher/stats", [auth_1.default, roleAuth_1.default.teacher()], AttendanceController_1.default.getTeacherAttendanceStats);
Route.get("/api/attendance/export", [auth_1.default, roleAuth_1.default.teacherOrAdmin()], AttendanceController_1.default.exportAttendanceData);
Route.get("/journal/create", [auth_1.default, roleAuth_1.default.teacher()], JournalController_1.default.createPage);
Route.post("/journal", [auth_1.default, roleAuth_1.default.teacher()], JournalController_1.default.create);
Route.get("/journal/:journal_id/edit", [auth_1.default, roleAuth_1.default.teacher()], JournalController_1.default.editPage);
Route.put("/journal/:journal_id", [auth_1.default, roleAuth_1.default.teacher()], JournalController_1.default.update);
Route.post("/journal/:journal_id/upload", [auth_1.default, roleAuth_1.default.teacher()], JournalController_1.default.uploadMedia);
Route.get("/api/journal/teacher/:teacher_id", [auth_1.default], JournalController_1.default.getTeacherJournals);
Route.get("/api/journal/class/:class_id", [auth_1.default], JournalController_1.default.getClassJournals);
Route.post("/api/journal/:journal_id/publish", [auth_1.default, roleAuth_1.default.teacher()], JournalController_1.default.publish);
Route.delete("/api/journal/:journal_id", [auth_1.default, roleAuth_1.default.teacher()], JournalController_1.default.delete);
Route.get("/api/journal/search", [auth_1.default], JournalController_1.default.search);
Route.get("/exam/create", [auth_1.default, roleAuth_1.default.teacher()], ExamController_1.default.createPage);
Route.post("/exam/import-excel", [auth_1.default, roleAuth_1.default.teacher()], ExamController_1.default.importExcel);
Route.get("/exam/template", [auth_1.default, roleAuth_1.default.teacher()], ExamController_1.default.downloadTemplate);
Route.post("/exam/:exam_id/start", [auth_1.default, roleAuth_1.default.student()], ExamController_1.default.startAttempt);
Route.post("/exam/attempt/:attempt_id/answer", [auth_1.default, roleAuth_1.default.student()], ExamController_1.default.submitAnswer);
Route.post("/exam/attempt/:attempt_id/submit", [auth_1.default, roleAuth_1.default.student()], ExamController_1.default.submitExam);
Route.get("/exam/:exam_id/results", [auth_1.default, roleAuth_1.default.teacherOrAdmin()], ExamController_1.default.getResults);
Route.get("/api/exam/student/:student_id?", [auth_1.default], ExamController_1.default.getStudentExams);
Route.post("/api/exam/:exam_id/activate", [auth_1.default, roleAuth_1.default.teacher()], ExamController_1.default.activateExam);
Route.get("/api/exam/:exam_id", [auth_1.default], ExamController_1.default.getExamDetails);
Route.get("/api/exam/teacher/:teacher_id?", [auth_1.default], ExamController_1.default.getTeacherExams);
Route.get("/home", [auth_1.default], AuthController_1.default.homePage);
Route.get("/profile", [auth_1.default], AuthController_1.default.profilePage);
Route.post("/change-profile", [auth_1.default], AuthController_1.default.changeProfile);
Route.post("/change-password", [auth_1.default], AuthController_1.default.changePassword);
Route.delete("/users", [auth_1.default], AuthController_1.default.deleteUsers);
Route.get("/admin/students", [auth_1.default, roleAuth_1.default.admin()], StudentController_1.default.index);
Route.get("/admin/students/create", [auth_1.default, roleAuth_1.default.admin()], StudentController_1.default.create);
Route.post("/admin/students", [auth_1.default, roleAuth_1.default.admin()], StudentController_1.default.store);
Route.get("/admin/students/:id", [auth_1.default, roleAuth_1.default.admin()], StudentController_1.default.show);
Route.get("/admin/students/:id/edit", [auth_1.default, roleAuth_1.default.admin()], StudentController_1.default.edit);
Route.put("/admin/students/:id", [auth_1.default, roleAuth_1.default.admin()], StudentController_1.default.update);
Route.delete("/admin/students/:id", [auth_1.default, roleAuth_1.default.admin()], StudentController_1.default.destroy);
Route.post("/admin/students/bulk-delete", [auth_1.default, roleAuth_1.default.admin()], StudentController_1.default.bulkDelete);
Route.post("/admin/students/import-csv", [auth_1.default, roleAuth_1.default.admin()], StudentController_1.default.importCSV);
Route.get("/admin/students/export-csv", [auth_1.default, roleAuth_1.default.admin()], StudentController_1.default.exportCSV);
Route.get("/admin/students/template-csv", [auth_1.default, roleAuth_1.default.admin()], StudentController_1.default.downloadTemplate);
Route.get("/api/students", [auth_1.default, roleAuth_1.default.admin()], StudentController_1.default.getStudentsAPI);
Route.get("/admin/teachers", [auth_1.default, roleAuth_1.default.admin()], TeacherController_1.default.index);
Route.get("/admin/teachers/create", [auth_1.default, roleAuth_1.default.admin()], TeacherController_1.default.create);
Route.post("/admin/teachers", [auth_1.default, roleAuth_1.default.admin()], TeacherController_1.default.store);
Route.get("/admin/teachers/:id", [auth_1.default, roleAuth_1.default.admin()], TeacherController_1.default.show);
Route.get("/admin/teachers/:id/edit", [auth_1.default, roleAuth_1.default.admin()], TeacherController_1.default.edit);
Route.put("/admin/teachers/:id", [auth_1.default, roleAuth_1.default.admin()], TeacherController_1.default.update);
Route.delete("/admin/teachers/:id", [auth_1.default, roleAuth_1.default.admin()], TeacherController_1.default.destroy);
Route.post("/admin/teachers/import-csv", [auth_1.default, roleAuth_1.default.admin()], TeacherController_1.default.importCSV);
Route.get("/admin/teachers/export-csv", [auth_1.default, roleAuth_1.default.admin()], TeacherController_1.default.exportCSV);
Route.get("/admin/teachers/template-csv", [auth_1.default, roleAuth_1.default.admin()], TeacherController_1.default.downloadTemplate);
Route.get("/api/teachers", [auth_1.default, roleAuth_1.default.admin()], TeacherController_1.default.getTeachersAPI);
Route.get("/api/teachers/by-subject/:subjectId", [auth_1.default, roleAuth_1.default.admin()], TeacherController_1.default.getTeachersBySubject);
Route.get("/admin/parents", [auth_1.default, roleAuth_1.default.admin()], ParentController_1.default.index);
Route.get("/admin/parents/create", [auth_1.default, roleAuth_1.default.admin()], ParentController_1.default.create);
Route.post("/admin/parents", [auth_1.default, roleAuth_1.default.admin()], ParentController_1.default.store);
Route.get("/admin/parents/:id", [auth_1.default, roleAuth_1.default.admin()], ParentController_1.default.show);
Route.get("/admin/parents/:id/edit", [auth_1.default, roleAuth_1.default.admin()], ParentController_1.default.edit);
Route.put("/admin/parents/:id", [auth_1.default, roleAuth_1.default.admin()], ParentController_1.default.update);
Route.delete("/admin/parents/:id", [auth_1.default, roleAuth_1.default.admin()], ParentController_1.default.destroy);
Route.post("/admin/parents/import-csv", [auth_1.default, roleAuth_1.default.admin()], ParentController_1.default.importCSV);
Route.get("/admin/parents/export-csv", [auth_1.default, roleAuth_1.default.admin()], ParentController_1.default.exportCSV);
Route.get("/admin/parents/template-csv", [auth_1.default, roleAuth_1.default.admin()], ParentController_1.default.downloadTemplate);
Route.post("/admin/parents/:id/students", [auth_1.default, roleAuth_1.default.admin()], ParentController_1.default.addStudent);
Route.delete("/admin/parents/:id/students/:studentId", [auth_1.default, roleAuth_1.default.admin()], ParentController_1.default.removeStudent);
Route.get("/api/parents", [auth_1.default, roleAuth_1.default.admin()], ParentController_1.default.getParentsAPI);
Route.get("/api/students/search-nipd", [auth_1.default, roleAuth_1.default.admin()], ParentController_1.default.searchStudentByNipd);
Route.get("/admin/subjects", [auth_1.default, roleAuth_1.default.admin()], SubjectController_1.default.index);
Route.get("/admin/subjects/create", [auth_1.default, roleAuth_1.default.admin()], SubjectController_1.default.create);
Route.post("/admin/subjects", [auth_1.default, roleAuth_1.default.admin()], SubjectController_1.default.store);
Route.get("/admin/subjects/:id", [auth_1.default, roleAuth_1.default.admin()], SubjectController_1.default.show);
Route.get("/admin/subjects/:id/edit", [auth_1.default, roleAuth_1.default.admin()], SubjectController_1.default.edit);
Route.put("/admin/subjects/:id", [auth_1.default, roleAuth_1.default.admin()], SubjectController_1.default.update);
Route.delete("/admin/subjects/:id", [auth_1.default, roleAuth_1.default.admin()], SubjectController_1.default.destroy);
Route.get("/api/subjects", [auth_1.default, roleAuth_1.default.admin()], SubjectController_1.default.getSubjectsAPI);
Route.get("/api/subjects/:id", [auth_1.default, roleAuth_1.default.admin()], SubjectController_1.default.getSubjectDetailAPI);
Route.get("/admin/classes", [auth_1.default, roleAuth_1.default.admin()], ClassController_1.default.index);
Route.get("/admin/classes/:className", [auth_1.default, roleAuth_1.default.admin()], ClassController_1.default.show);
Route.post("/admin/classes/:className/assign-teacher", [auth_1.default, roleAuth_1.default.admin()], ClassController_1.default.assignTeacher);
Route.delete("/admin/classes/:className/unassign-teacher", [auth_1.default, roleAuth_1.default.admin()], ClassController_1.default.unassignTeacher);
Route.post("/admin/classes/:className/assign-subject", [auth_1.default, roleAuth_1.default.admin()], ClassController_1.default.assignSubject);
Route.delete("/admin/classes/:className/unassign-subject", [auth_1.default, roleAuth_1.default.admin()], ClassController_1.default.unassignSubject);
Route.get("/admin/classes/:className/subjects", [auth_1.default, roleAuth_1.default.admin()], ClassController_1.default.getClassSubjects);
Route.get("/api/classes", [auth_1.default, roleAuth_1.default.admin()], ClassController_1.default.getClassesAPI);
Route.get("/api/classes/teachers", [auth_1.default, roleAuth_1.default.admin()], ClassController_1.default.getAvailableTeachers);
Route.get("/api/classes/subjects", [auth_1.default, roleAuth_1.default.admin()], ClassController_1.default.getAvailableSubjects);
Route.get("/assets/:file", AssetController_1.default.distFolder);
Route.get("/*", AssetController_1.default.publicFolder);
exports.default = Route;
//# sourceMappingURL=web.js.map